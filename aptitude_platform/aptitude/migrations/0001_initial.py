# Generated by Django 5.2 on 2025-04-22 04:27

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Level',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('Basic', 'Campus placements, internships'), ('Intermediate', 'Banking, SSC, GRE'), ('Advance', 'CAT, XAT, IT company hard tests'), ('Specialized Sections', '(DI, Puzzles, Logical Reasoning)')], max_length=50, unique=True)),
                ('slug', models.SlugField(unique=True)),
                ('difficulty_order', models.PositiveSmallIntegerField(unique=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(4)])),
            ],
            options={
                'ordering': ['difficulty_order'],
            },
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('slug', models.SlugField(max_length=100, unique=True)),
                ('category', models.CharField(blank=True, choices=[('quant', 'Quantitative Aptitude'), ('verbal', 'Verbal Ability'), ('logical', 'Logical Reasoning')], max_length=50)),
                ('description', models.TextField(blank=True)),
                ('levels', models.ManyToManyField(blank=True, help_text='Which exam levels this topic belongs to', related_name='topics', to='aptitude.level')),
                ('prerequisite_topics', models.ManyToManyField(blank=True, related_name='is_prerequisite_for', to='aptitude.topic')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='TutorialPart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('part_name', models.CharField(max_length=100)),
                ('slug', models.SlugField(max_length=120, unique=True)),
                ('key_concepts', models.TextField(help_text='Explain the important concepts covered')),
                ('preparation_strategy', models.TextField(blank=True, help_text='Optional: how to prepare for this part')),
                ('example_problems', models.TextField(help_text='Include solved examples with step-by-step explanations')),
                ('explanations', models.TextField(help_text='Explain concepts or patterns in detail')),
                ('common_pitfalls', models.TextField(blank=True, help_text='Mention commonly made mistakes')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('level', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tutorial_parts', to='aptitude.level')),
                ('prerequisite_parts', models.ManyToManyField(blank=True, help_text='Select parts that should be learned before this one.', related_name='is_prerequisite_for', to='aptitude.tutorialpart')),
                ('topic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tutorial_parts', to='aptitude.topic')),
            ],
            options={
                'ordering': ['topic', 'level', 'part_name'],
                'unique_together': {('topic', 'level', 'part_name')},
            },
        ),
    ]
